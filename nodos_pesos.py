# -*- coding: utf-8 -*-
"""nodos_pesos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1haf_LaXTK2qZTiAuzRYCv5uvHxdcNkPH
"""

def nodos_y_pesos_cuadratura(M):
  import numpy as np
  import math
  from legendre import evaluacion_polinomios_Legendre
  x=np.zeros(M+1)
  w=np.zeros(M+1)
  tol=0.000000000000001
  if M==1:
    x[0]=-1
    w[0]=1
    x[1]=1
    w[1]=w[0]
  else:
    x[0]=-1
    w[0]=2/(M*(M+1))
    x[-1]=1
    w[-1]=w[0]
    for j in range(1,int(((M+1)//2))):
      x[j]=-np.cos((((j+(1/4))*math.pi)/(M))-(3/(8*M*math.pi))*(1/(j+1/4)))
      while True:
        L_n,q,dq=evaluacion_polinomios_Legendre(x[j],M)
        x[j]=x[j]-q/dq
        if abs(q/dq)<=(tol*abs(x[j])):
          break

      L_n,q,dq=evaluacion_polinomios_Legendre(x[j],M)
      x[M-j]=-x[j]
      w[j]=w[0]/(L_n)**2
      w[M-j]=w[j]

  if M%2==0:
    L_n,q,dq=evaluacion_polinomios_Legendre(0,M)
    x[int(M/2)]=0
    w[int(M/2)]=2/(M*(M+1)*(L_n**2))
  
  return x,w
